# name: CI Pipeline

# on: push

# jobs:
#   project-testing:
#     runs-on: ubuntu-latest

#     steps:
#       - name: checkout code
#         uses: actions/checkout@v3

#       - name: setup python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'

#       - name: Cache pip dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-

#       - name: install dependencies
#         run: |
#           pip install -r requirements.txt

#       - name: run pipeline
#         env:
#           CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
#         run: |
#           dvc repro

#       - name: Run model tests
#         env:
#           CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
#         run: |
#           python -m unittest tests/test_model.py

#       - name: Promote model to production
#         if: success()
#         env:
#           CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
#         run: python scripts/promote_model.py

#       - name: Run Flask app tests
#         if: success()
#         env:
#           CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
#         run: python -m unittest tests/test_flask_app.py

name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[all]   # ✅ install DVC (or dvc[s3], dvc[gdrive], etc.)

      - name: Pull DVC data
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
        run: |
          dvc pull   # ✅ makes sure data is available before repro

      - name: Run pipeline
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
        run: |
          dvc repro

      - name: Run model tests
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
        run: |
          python -m unittest tests/test_model.py

      - name: Promote model to production
        if: success()
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          CAPSTONE_TEST: ${{ secrets.CAPSTONE_TEST }}
        run: python -m unittest tests/test_flask_app.py
